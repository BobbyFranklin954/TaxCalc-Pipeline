apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: app-name
    - name: build-image
    - name: repo-url
    - name: branch
      default: master
  tasks:
    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup

    - name: clone
      workspaces:
        - name: output
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
      params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.branch)
      runAfter:
        - init      
        
    - name: npminstall
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: npm
      runAfter:
        - clone
        
    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: jasmine
      runAfter:
        - npminstall
        
    - name: build
      workspaces:
        - name: source
          persistentVolumeClaim:
            claimName: pipeline-workspace
#           workspace: pipeline-workspace          
      taskRef:
        name: docker-build
        kind: ClusterTask
      params:
      - name: image
        value: "$(params.build-image)"
      runAfter:
        - tests

#     - name: build
#       workspaces:
#         - name: source
#           workspace: pipeline-workspace          
#       taskRef:
#         name: buildah
#         kind: ClusterTask
#       params:
#       - name: IMAGE
#         value: "$(params.build-image)"
#       runAfter:
#         - tests

#     - name: deploy
#       taskRef:
#         name: openshift-client
#         kind: ClusterTask
#       params:
#       - name: SCRIPT
#         value: "oc create deploy $(params.app-name) --image=$(params.build-image)"
#       runAfter:
#         - build
